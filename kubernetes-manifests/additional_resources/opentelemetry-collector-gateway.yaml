mode: deployment

replicaCount: 1

presets:
  kubernetesEvents:
    enabled: true
  clusterMetrics:
    enabled: true

resources:
  limits:
    cpu: 500m
    memory: 2Gi
  requests:
    cpu: 200m
    memory: 400Mi

config:
  processors:
    transform/events:
      error_mode: ignore
      log_statements:
        - context: log
          statements:
            - set(attributes["watch-type"], body["type"]) where IsMap(body) and body["type"] != nil

            # only one of these will run
            - merge_maps(attributes, body, "upsert") where IsMap(body) and body["object"] == nil
            - merge_maps(attributes, body["object"], "upsert") where IsMap(body) and body["object"] != nil

            - merge_maps(attributes, attributes[ "metadata"], "upsert") where IsMap(attributes[ "metadata"])
            - set(attributes["k8s.pod.name"], attributes["regarding"]["name"]) where attributes["regarding"]["kind"] == "Pod"
            - set(attributes["k8s.node.name"], attributes["regarding"]["name"]) where attributes["regarding"]["kind"] == "Node"
            - set(attributes["k8s.job.name"], attributes["regarding"]["name"]) where attributes["regarding"]["kind"] == "Job"
            - set(attributes["k8s.cronjob.name"], attributes["regarding"]["name"]) where attributes["regarding"]["kind"] == "CronJob"
            - set(attributes["k8s.namespace.name"], attributes["regarding"]["namespace"]) where attributes["regarding"]["kind"] == "Pod" or attributes["regarding"]["kind"] == "Job" or attributes["regarding"]["kind"] == "CronJob"
            - set(severity_text, attributes["type"]) where attributes["type"] == "Normal" or attributes["type"] == "Warning"
            - set(severity_number, SEVERITY_NUMBER_INFO) where attributes["type"] == "Normal"
            - set(severity_number, SEVERITY_NUMBER_WARN) where attributes["type"] == "Warning"
  exporters:
    otlp/dogfood-analyze-metrics:
      endpoint: api-dogfood.honeycomb.io:443
      headers:
        "x-honeycomb-team": "${HONEYCOMB_DOGFOOD_API_KEY}"
        "x-honeycomb-dataset": "kubernetes-metrics"
    otlp/dogfood-analyze-events:
      endpoint: api-dogfood.honeycomb.io:443
      headers:
        "x-honeycomb-team": "${HONEYCOMB_DOGFOOD_API_KEY}"
        "x-honeycomb-dataset": "kubernetes-events"
    otlp/dogfood-k8s-metrics:
      endpoint: api-dogfood.honeycomb.io:443
      headers:
        "x-honeycomb-team": "${env:HONEYCOMB_DOGFOOD_K8S_API_KEY}"
        "x-honeycomb-dataset": "kubernetes-metrics"
    otlp/dogfood-k8s-events:
      endpoint: api-dogfood.honeycomb.io:443
      headers:
        "x-honeycomb-team": "${env:HONEYCOMB_DOGFOOD_K8S_API_KEY}"
        "x-honeycomb-dataset": "kubernetes-events"

  service:
    pipelines:
      traces: null
      metrics:
        receivers:
          - k8s_cluster
        exporters:
          - otlp/dogfood-analyze-metrics
          - otlp/dogfood-k8s-metrics
          - logging
      logs:
        receivers:
          - k8sobjects
        processors:
          - memory_limiter
          - transform/events
          - batch
        exporters:
          - otlp/dogfood-analyze-events
          - otlp/dogfood-k8s-events
          - logging

extraEnvs:
  - name: HONEYCOMB_DOGFOOD_API_KEY
    valueFrom:
      secretKeyRef:
        key: api-key
        name: honeycomb-dogfood-opentelemetry-collector
  - name: HONEYCOMB_DOGFOOD_K8S_API_KEY
    valueFrom:
      secretKeyRef:
        key: api-key
        name: honeycomb-dogfood-k8s-opentelemetry-collector

ports:
  otlp:
    enabled: false
  otlp-http:
    enabled: false
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false

service:
  enabled: false